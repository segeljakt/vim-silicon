*silicon.txt*    Create beautiful images of your source code.

                                 vim-silicon
CONTENTS                                                         *vim-silicon*

    1. Introduction ............................... |vim-silicon-introduction|
    2. Requirements ............................... |vim-silicon-requirements|
    3. Commands ................................... |vim-silicon-commands|
    4. Options .................................... |vim-silicon-options|
    5. Notes ...................................... |vim-silicon-notes|

==============================================================================
INTRODUCTION                                        *vim-silicon-introduction*

This plugin provides a command which, given a visual selection or buffer, will
generate a pretty image of the code using https://github.com/Aloxaf/silicon.
The image generator is similar to https://carbon.now.sh, but does not require
an internet connection.

==============================================================================
REQUIREMENTS                                        *vim-silicon-requirements*

A Vim version 7.4 or higher is required for basic functionality. You also need
to install silicon, which is most easily done using cargo:

>
    # Install cargo
    curl https://sh.rustup.rs -sSf | sh

    # Install silicon
    cargo install silicon

    # Add cargo-installed binaries to the path
    export PATH="$PATH:$CARGO_HOME/bin"
>

==============================================================================
COMMANDS                                                *vim-silicon-commands*

    1. Silicon ........................................... |:Silicon|
    2. SiliconHighlight .................................. |:SiliconHighlight|

------------------------------------------------------------------------------
                                                                    *:Silicon*

Generate a code image from a buffer or visual line selection.

Examples:

>
    " Generate an image of the current buffer and write it to clipboard
    :Silicon

    " Generate an image of the current buffer
    " and write it to /path/to/output.png
    :Silicon /path/to/output.png

    " Generate an image of the current visual line selection
    " and write it to /path/to/output.png
    :'<,'>Silicon /path/to/output.png
>

------------------------------------------------------------------------------
                                                           *:SiliconHighlight*

Like `Silicon`, but generates an image of the current buffer, with the current
visual line selection highlighted.

==============================================================================
OPTIONS                                                  *vim-silicon-options*

    g:silicon .................................................... |g:silicon|

------------------------------------------------------------------------------
                                                                   *g:silicon*
Type: dict ~
Default: ~
>
    let g:silicon = {
          \ 'theme':              'Dracula',
          \ 'font':                  'Hack',
          \ 'background':         '#aaaaff',
          \ 'shadow-color':       '#555555',
          \ 'line-pad':                   2,
          \ 'pad-horiz':                 80,
          \ 'pad-vert':                 100,
          \ 'shadow-blur-radius':         0,
          \ 'shadow-offset-x':            0,
          \ 'shadow-offset-y':            0,
          \ 'line-number':           v:true,
          \ 'round-corner':          v:true,
          \ 'window-controls':       v:true,
          \ }
>

To get the list of available themes, you can run this in the terminal:

>
    silicon --list-themes
>

For more details about options, please see https://github.com/Aloxaf/silicon.

==============================================================================
NOTES                                                      *vim-silicon-notes*

Currently, `silicon` only supports copying to clipboard on macOS and Linux.

==============================================================================
" vim:tw=78:ts=4:sts=4:sw=4:ft=help:norl:
